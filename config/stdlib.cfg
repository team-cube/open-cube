// Console language standard library

// Binds a key so that it will toggle a variable
bindvar =          [bind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
bindvarquiet =     [bind $arg1 [@arg2 (= $@arg2 0)]]
editbindvar =      [editbind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
editbindvarquiet = [editbind $arg1 [@arg2 (= $@arg2 0)]]

// Binds a key so that it will set a modifier while held down
bindmod =     [bind $arg1 [@arg2 1; onrelease [@@arg2 0]]]
editbindmod = [editbind $arg1 [@arg2 1; onrelease [@@arg2 0]]]

quine = [echo (format "quine = [%1]" $quine)]

// Returns a new string from given list for each millis step given
// usage: (strswap 250 [string string string ..])
strswap = [at $arg2 (mod (div (getmillis) $arg1) (listlen $arg2))]

// Returns the length of given path
// usage: (pathlen <path/is/placed/here>)
pathlen = [listlen (strreplace $arg1 "/" " ")]

// Returns a specific folder out of given path
// usage: (getfolder <path/is/placed/here> <index>)
getfolder = [at (strreplace $arg1 "/" " ") $arg2]

// Returns a part of given path, starting from given folder index for given amount
// usage: (getpath <path/is/placed/here> <index> <amount>)
getpath = [strreplace (sublist (strreplace $arg1 "/" " ") $arg2 $arg3) " " "/"]

// Returns given RGB color as an INT color
// usage: (rgbtoint R G B)
rgbtoint = [+ (* (+ (* $arg1 256) $arg2) 256) $arg3]

// Returns given RGB color as a HEX color
// usage: (rgbtohex R G B)
rgbtohex = [tohex (rgbtoint $arg1 $arg2 $arg3) 6]

// Returns given INT color as an RGB color
// usage: (inttorgb <value> R-var G-var B-var)
inttorgb = [
    $arg1 = (& $arg1 0xFF) 
    $arg2 = (& (>> $arg2 8) 0xFF)
    $arg3 = (& (>> $arg3 16) 0xFF)
]

