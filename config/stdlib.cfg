// Console language standard library

// Binds a key so that it will toggle a variable
bindvar          = [bind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
bindvarquiet     = [bind $arg1 [@arg2 (= $@arg2 0)]]
editbindvar      = [editbind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
editbindvarquiet = [editbind $arg1 [@arg2 (= $@arg2 0)]]

// Binds a key so that it will set a modifier while held down
bindmod     = [bind $arg1 [@arg2 1; onrelease [@@arg2 0]]]
editbindmod = [editbind $arg1 [@arg2 1; onrelease [@@arg2 0]]]

// Clears all keybinds
clearbinds = [looplist a $thekeys [bind $a; specbind $a; editbind $a]]

// Clears only editmode keybinds
cleareditbinds = [looplist a $thekeys [editbind $a; bind E]]

thekeys = [
   MOUSELEFT MOUSEMIDDLE MOUSERIGHT MOUSEWHEELUP MOUSEWHEELDOWN MOUSEBACK MOUSEFORWARD
   BACKSPACE TAB RETURN ESCAPE SPACE EXCLAIM QUOTEDBL HASH DOLLAR AMPERSAND QUOTE LEFTPAREN RIGHTPAREN ASTERISK PLUS COMMA MINUS PERIOD SLASH 
   0 1 2 3 4 5 6 7 8 9 
   COLON SEMICOLON LESS EQUALS GREATER QUESTION AT LEFTBRACKET BACKSLASH RIGHTBRACKET CARET UNDERSCORE BACKQUOTE
   A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 
   DELETE 
   KP1 KP2 KP3 KP4 KP5 KP6 KP7 KP8 KP9 KP0
   KP_PERIOD KP_DIVIDE KP_MULTIPLY KP_MINUS KP_PLUS KP_ENTER KP_EQUALS 
   UP DOWN RIGHT LEFT
   PAUSE INSERT HOME END PAGEUP PAGEDOWN 
   F1 F2 F3 F4 F5 F6 F7 F8 F9 F10 F11 F12 
   NUMLOCK CAPSLOCK SCROLLOCK
   RSHIFT LSHIFT RCTRL LCTRL RALT LALT RMETA LMETA COMPOSE HELP PRINT SYSREQ MENU
]

quine = [echo (format "quine = [%1]" $quine)]

// Returns the length of given path
// usage: (pathlen <path/is/placed/here>)
pathlen = [listlen (strreplace $arg1 "/" " ")]

// Returns a specific folder out of given path
// usage: (getfolder <path/is/placed/here> <index>)
getfolder = [at (strreplace $arg1 "/" " ") $arg2]

// Returns a part of given path, starting from given folder index for given amount
// usage: (getpath <path/is/placed/here> <index> <amount>)
getpath = [strreplace (sublist (strreplace $arg1 "/" " ") $arg2 $arg3) " " "/"]

// Returns given RGB color as an INT color
// usage: (rgbtoint R G B)
rgbtoint = [+ (<< $arg1 16) (<< $arg2 8) $arg3]

// Returns given RGB color as a HEX color
// usage: (rgbtohex R G B)
rgbtohex = [tohex (rgbtoint $arg1 $arg2 $arg3) 6]

// Returns given INT color as an RGB color
// usage: (inttorgb <value> R-var G-var B-var)
inttorgb = [
   $arg2 = (& (>> $arg1 16) 0xFF) 
   $arg3 = (& (>> $arg1 8) 0xFF)
   $arg4 = (& $arg1 0xFF)
]

// *.tex file handling
texsky      = [setshader "stdworld"; texture 0 "game/sky.png"]
texerror    = [setshader "stdworld"; texture 0 "game/notexture.png"]
texnorender = [setshader "stdworld"; texture 0 "game/norender.png"]
texload     = [
   if (findfile [media/texture/@arg1.tex]) [
      exec [media/texture/@arg1.tex]
   ] [
      error [texload error: @arg1.tex not found]
      texerror
   ]
]
