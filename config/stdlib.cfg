// Console language standard library

// Binds a key so that it will toggle a variable
bindvar =          [bind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
bindvarquiet =     [bind $arg1 [@arg2 (= $@arg2 0)]]
editbindvar =      [editbind $arg1 [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [echo @@arg2 ON]]]
editbindvarquiet = [editbind $arg1 [@arg2 (= $@arg2 0)]]

// Binds a key so that it will set a modifier while held down
bindmod =     [bind $arg1 [@arg2 1; onrelease [@@arg2 0]]]
editbindmod = [editbind $arg1 [@arg2 1; onrelease [@@arg2 0]]]

quine = [echo (format "quine = [%1]" $quine)]

// Returns a new string from given list for each millis step given
// usage: (strswap 250 [string string string ..])
strswap = [at $arg2 (mod (div (getmillis) $arg1) (listlen $arg2))]

// Returns the length of given path
// usage: (pathlen <path/is/placed/here>)
pathlen = [listlen (strreplace $arg1 "/" " ")]

// Returns a specific folder out of given path
// usage: (getfolder <path/is/placed/here> <index>)
getfolder = [at (strreplace $arg1 "/" " ") $arg2]

// Returns a part of given path, starting from given folder index for given amount
// usage: (getpath <path/is/placed/here> <index> <amount>)
getpath = [strreplace (sublist (strreplace $arg1 "/" " ") $arg2 $arg3) " " "/"]

// Returns given RGB color as an INT color
// usage: (rgbtoint R G B)
rgbtoint = [+ (* (+ (* $arg1 256) $arg2) 256) $arg3]

// Returns given RGB color as a HEX color
// usage: (rgbtohex R G B)
rgbtohex = [
   arg4 = 0x
   loop+ i 1 3 [
      push i "0123456789ABCDEF" [
         arg4 = (concatword $arg4 (substr $i (div $arg@i 16) 1))
         arg4 = (concatword $arg4 (substr $i (mod $arg@i 16) 1))
      ]
   ]
   result $arg4 
]

// Returns given INT color as an RGB color
// usage: (inttorgb <value> R-var G-var B-var)
inttorgb = [ loop i 3 [ $[arg@(+ $i 2)] = (& (>> $arg1 (* $i 8)) 255) ] ]

// Returns given INT color as a HEX color
// usage: (inttohex <value)
inttohex = [
   arg2 = 0x
   loop+* i 2 -1 3 [
      push i "0123456789ABCDEF" [
         arg2 = (concatword $arg2 (substr $i (div (& (>> $arg1 (* @i 8)) 255) 16) 1))
         arg2 = (concatword $arg2 (substr $i (mod (& (>> $arg1 (* @i 8)) 255) 16) 1))
      ]
   ]
   result $arg2
]
