
// implements some editing commands



///////////////////////////////////////////////////////////////////////////////
//  Entity primary actions                                                   //
///////////////////////////////////////////////////////////////////////////////

=enttype = [
  || (=s * $arg1) [=s (enttype) $arg1]
]

=entattr = [
  || (=s * $arg2) [= (entattr $arg1) $arg2]
]

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ =enttype $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    do [
        entfind @(entget)
        entset @(loopconcat i $numargs [result $[arg@(+ $i 1)]])
    ]
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ saycommand ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ saycommand ( concatword "/replaceents " (entget) ) ]  
selentfindall   = [ do [ entfind @(entget) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
  entattr $arg1 (+ (entattr $arg1) $arg2)
]

enttypelist = [ 
  light mapmodel playerstart envmap particles sound
  shells bullets rockets riflerounds grenades cartridges
  health greenarmour yellowarmour
  teleport teledest
  jumppad
  spotlight
  flag
]

enttypeselect = [     
  enttypelength = (listlen $enttypelist)
  next = (mod (+ (indexof $enttypelist (enttype)) $arg1) $enttypelength)
  if (< $next 0) [ next = (+ $next $enttypelength) ]
  do [entset @(listsplice (entget) (at $enttypelist $next) 0 1)]
]


///////////////////////////////////////////////////////////////////////////////
//  Copy & Paste                                                             //
///////////////////////////////////////////////////////////////////////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entreplace   = [ 
  do [
    if (enthavesel) [] [ newent @entcopybuf ]
    entset @entcopybuf 
  ]
]

editcopy   = [
  if (|| (havesel) [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste  = [ 
  cancelpaste = (! (|| (enthavesel) [havesel]));
  if (strcmp "" $entcopybuf) [
    pastehilite
    reorient // temp; real fix will be in octaedit
    onrelease [ 
      if $opaquepaste delcube 
      paste
      entpaste
      if $cancelpaste [ cancelsel ] 
    ] 
  ] [
    entreplace
    if $cancelpaste [ cancelsel ] 
  ] 
]


///////////////////////////////////////////////////////////////////////////////
//  Selection                                                                //
///////////////////////////////////////////////////////////////////////////////

// select ents with given properties
// '*' is wildcard
entfind    = [ 
  if (= $numargs 0) [
    entselect 1
  ] [
    entselect (concat [ && (=enttype @@arg1) ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

entfindinsel = [ 
  if (= $numargs 0) [
    entselect [ insel ]
  ] [
    entselect (concat [ && (insel) [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

lse        = [
  line = ""
  count = 0
  entloop [
    line  = ( concatword $line (entget) "		" )
    count = ( + $count 1 )
    if (> $count 4) [
      echo $line
      line = ""
      count = 0
    ]
  ]
  if (> $count 0 ) [ echo $line ]
  echo (enthavesel) entities selected
]

grabbing = 0

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entmoving 1; onrelease [entmoving 0]; result $entmoving ] 
editdrag   = [ cancelsel; || (entdrag) [ drag ] ]
selcorners = [ if $hmapedit [ hmapselect ] [ cancelsel; || (entdrag) [ corners ] ] ]
editextend = [ || (entdrag) [ selextend; reorient; editmovecut ] ]

editmovewith    = [
  if (havesel) [
    || (editmove) [ arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]


///////////////////////////////////////////////////////////////////////////////
//  Other Editing Commands                                                   //
///////////////////////////////////////////////////////////////////////////////

editfacewsel = [if (|| (havesel) [! (enthavesel)]) [if $moving [pushsel $arg1] [entcancel; editface $arg1 $arg2]]]

entswithdirection = [playerstart teledest mapmodel]
entdirectionprop  = [0           0        1]

entdirection = [
  if ( && (enthavesel) [ = (havesel) 0 ] ) [
    entdiridx = (indexof $entswithdirection (enttype))
    if (>= $entdiridx 0) [
      entdirprop = (at $entdirectionprop $entdiridx)
      if (> $arg1 0) [
        entproperty $entdirprop $arg2
        if (> (entattr $entdirprop) 360) [ entproperty $entdirprop -360 ]          
      ] [
        entproperty $entdirprop (- 0 $arg2)
        if (< (entattr $entdirprop) 0) [ entproperty $entdirprop 360 ]
      ]
    ]
    result 1
  ] [
    result 0
  ]
]

editdel    = [if (! (enthavesel)) [delcube]; delent]
editflip   = [flip; entflip]
editrotate = [|| (entdirection $arg1 15) [rotate $arg1; entrotate $arg1]]

selmovecut = 1
toggleeditmovecut = [
    selmovecut = (! $selmovecut)
    echo (? $selmovecut "Move Selection" "Cut Selection")
]
editmovecut = [
    if $selmovecut [editmove] [editcut]
]

editcut    = [  
  if (moving 1) [
    if (= $moving 1) [selsave]
    onrelease [ 
      moving 0
      if (selmoved) [
        selswap
        copy; entcopy
        delcube; delent
        selrestore
        paste; entpaste
      ]
    ]
  ]
]

setting_entediting = 1

passthrough = [ 
  passthroughsel $arg1; 
  if $arg1 [
    passthroughcube_bak = $passthroughcube
    passthroughcube 1
  ] [
    passthroughcube $passthroughcube_bak
  ]
  entcancel 
  if $setting_entediting [ entediting ( ! $arg1 ) ]
]

entcomplete = [ listcomplete $arg1 $enttypelist ]
entcomplete newent
entcomplete entfind
entcomplete clearents

listcomplete editmat "air water clip glass noclip lava gameclip death nogi alpha"
air = [ editmat air $arg1 ]
loop i 4 [
    [water@(? $i (+ $i 1))] = [ editmat water@(? $i (+ $i 1)) $arg1 ]
    [lava@(? $i (+ $i 1))] = [ editmat lava@(? $i (+ $i 1)) $arg1 ]
    [glass@(? $i (+ $i 1))] = [ editmat glass@(? $i (+ $i 1)) $arg1 ]
]
clip = [ editmat clip $arg1 ]
noclip = [ editmat noclip $arg1 ]
gameclip = [ editmat gameclip $arg1 ]
death = [ editmat death $arg1 ]
nogi = [ editmat nogi $arg1 ]
alpha = [ editmat alpha $arg1 ]

blendpaintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]
setblendpaintmode = [
    if (> $numargs 0) [blendpaintmode $arg1] [blendpaintmode 0]
    echo "blend paint mode set to:" (at $blendpaintmodes $blendpaintmode)
]
scrollblendbrush = [
    if (> $numargs 0) [nextblendbrush $arg1] [nextblendbrush]
    echo "blend brush set to:" (getblendbrushname (curblendbrush))
]

minimaphere = [minimapheight (at (getcampos) 2)]

getsundir = [sunlightyaw (getcamyaw); sunlightpitch (getcampitch)]


///////////////////////////////////////////////////////////////////////////////
//  Edit HUD Stuff                                                           //
///////////////////////////////////////////////////////////////////////////////

edithud = [
    format "%4^f7%5^f7gridsize :^f2 %1 ^f7| worldsize :^f2 %2 ^f7| floatspeed :^f2 %3" $gridpower $mapscale $floatspeed (
        if $hmapedit [format "heightmap brush^f2 %1 ^f7:^f2 %2^n" $hbrushindex $hbrushname] [
            if $blendpaintmode [
                format "blendpaint mode : ^f2%1^f7^nblend brush : ^f2%2^n" (at $blendpaintmodes $blendpaintmode) (getblendbrushname (curblendbrush))
            ] [if (! (enthavesel)) [
                format "index^f2 %1 ^f7:^f2 %2^n" (max 0 (getseltex)) (gettexname (getseltex))
            ]]
        ]
    ) (if (enthavesel) [concat (entget) ":^f2" (enthavesel) "^f7selected^n"])
]
